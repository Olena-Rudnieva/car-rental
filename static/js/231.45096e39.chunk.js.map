{"version":3,"file":"static/js/231.45096e39.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = false;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.9\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let canSkipHandoff = true;\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                canSkipHandoff = false;\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        let canSkip = canSkipHandoff && valueTarget === value.get();\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        /**\n         * Skip this animation if the value hasn't changed. With an exception\n         * that we can't skip if it's a spring animation\n         */\n        if (canSkipHandoff &&\n            valueTarget === value.get() &&\n            (valueTransition.type !== \"spring\" ||\n                (!value.getVelocity() && !valueTransition.velocity))) {\n            continue;\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.9\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.9 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","canSkipHandoff","appearId","canSkip","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}